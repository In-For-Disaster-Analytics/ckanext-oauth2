name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ckan_version: '2.9.0'
            postgis_version: '2'

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      solr:
        image: solr:8.11.2
        ports:
          - 8983:8983
        # options: >-
        #   --health-cmd "curl -f http://solr:8983/solr/admin/ping"
        #   --health-interval 10s

    steps:
      - uses: actions/checkout@v3

      - uses: browser-actions/setup-geckodriver@latest
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: geckodriver --version

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install CKAN
        run: |
          git clone https://github.com/ckan/ckan
          cd ckan
          git checkout ckan-${{ matrix.ckan_version }}
          pip install setuptools==57.4
          python setup.py develop
          sed -i "s|psycopg2==2.4.5|psycopg2==2.7.1|g" requirements.txt
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          cd ..

      - name: Setup Solr
        run: |
          sed -i -e 's/solr_url.*/solr_url = http:\/\/solr:8983\/solr/' ckan/test-core.ini
          printf "NO_START=0\nJETTY_HOST=127.0.0.1\nJETTY_PORT=8983\nJAVA_HOME=$JAVA_HOME" | sudo tee /etc/default/jetty
          sudo cp ckan/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
          sudo service jetty restart

      - name: Setup PostgreSQL
        run: |
          sudo -u postgres psql -c "CREATE USER ckan_default WITH PASSWORD 'pass';"
          sudo -u postgres psql -c "CREATE USER datastore_default WITH PASSWORD 'pass';"
          sudo -u postgres psql -c "CREATE DATABASE ckan_test WITH OWNER ckan_default;"
          sudo -u postgres psql -c "CREATE DATABASE datastore_test WITH OWNER ckan_default;"
          cd ckan
          paster db init -c test-core.ini
          cd ..

      - name: Install extension
        run: python setup.py develop

      - name: Run tests
        run: |
          python setup.py nosetests

      - name: Upload coverage to Coveralls
        if: success()
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
