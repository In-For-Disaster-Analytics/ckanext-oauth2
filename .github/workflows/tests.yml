name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ckan_version: '2.8.0'
            postgis_version: '2'
            integration_test: true

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '2.7'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y solr-jetty firefox-esr

      - name: Install Geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.20.1/geckodriver-v0.20.1-linux64.tar.gz
          mkdir geckodriver
          tar -xzf geckodriver-v0.20.1-linux64.tar.gz -C geckodriver
          echo "$PWD/geckodriver" >> $GITHUB_PATH

      - name: Install CKAN
        run: |
          git clone https://github.com/ckan/ckan
          cd ckan
          git checkout ckan-${{ matrix.ckan_version }}
          python setup.py develop
          sed -i "s|psycopg2==2.4.5|psycopg2==2.7.1|g" requirements.txt
          pip install -r requirements.txt --allow-all-external
          pip install -r dev-requirements.txt --allow-all-external
          cd ..

      - name: Setup Solr
        run: |
          sed -i -e 's/solr_url.*/solr_url = http:\/\/127.0.0.1:8983\/solr/' ckan/test-core.ini
          printf "NO_START=0\nJETTY_HOST=127.0.0.1\nJETTY_PORT=8983\nJAVA_HOME=$JAVA_HOME" | sudo tee /etc/default/jetty
          sudo cp ckan/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
          sudo service jetty restart

      - name: Setup PostgreSQL
        run: |
          sudo -u postgres psql -c "CREATE USER ckan_default WITH PASSWORD 'pass';"
          sudo -u postgres psql -c "CREATE USER datastore_default WITH PASSWORD 'pass';"
          sudo -u postgres psql -c "CREATE DATABASE ckan_test WITH OWNER ckan_default;"
          sudo -u postgres psql -c "CREATE DATABASE datastore_test WITH OWNER ckan_default;"
          cd ckan
          paster db init -c test-core.ini
          cd ..

      - name: Install extension
        run: python setup.py develop

      - name: Setup integration tests
        if: matrix.integration_test == 'true'
        run: |
          sudo sh -c 'echo "\n[ SAN ]\nsubjectAltName=DNS:localhost" >> /etc/ssl/openssl.cnf'
          sudo openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \
            -subj '/O=API Umbrella/CN=localhost' \
            -keyout /etc/ssl/self_signed.key -out /usr/local/share/ca-certificates/self_signed.crt \
            -reqexts SAN -extensions SAN
          sudo update-ca-certificates
          export REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-certificates.crt"
          docker network create main
          cd ci
          docker-compose up -d
          cd ..
          # Wait for KeyRock to be ready
          for i in {1..50}; do
            if curl --output /dev/null --silent --head --fail --insecure http://localhost:3000; then
              break
            fi
            if [ $i -eq 50 ]; then
              echo "KeyRock failed to start"
              exit 1
            fi
            sleep 5
          done

      - name: Run tests
        run: |
          if [ "${{ matrix.integration_test }}" = "true" ]; then
            xvfb-run --server-args="-screen 0 1280x1024x24" python setup.py nosetests
          else
            python setup.py nosetests
          fi

      - name: Upload coverage to Coveralls
        if: success()
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
